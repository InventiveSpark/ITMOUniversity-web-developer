/* Для всех элементов: */
* {
    /* Сброс внутренних и внешних отступов: */
    padding: 0;
    margin: 0;
}

/* Ключевые кадры анимации с именем rotate: */
@keyframes rotate {
    /* Каждый ключевой кадр начинается с указания момента от длительности 
       всей анимации и набора CSS-свойств, которые анимируемый элемент 
       должен принять к указанному моменту. В данном случае анимируется 
       поворот элемента на угол 360 градусов относительно точки трансформации, 
       задаваемой свойством transform-origin.
       Конечные CSS-свойства анимируемого элемента: */
    100% {
        transform: rotate(360deg);
    }
}

.wrap {
    /* Ширина элемента: */
    width: 200px;
    /* Высота элемента: */
    height: 150px;
    /* Толщина, стиль (цельный) и цвет внешней границы: */
    outline: 1px solid #000;
    /* Тип элемента - блочно-строчный. Его внутренняя часть форматируется 
       как блочный элемент, а сам элемент - как строчный: */
    display: inline-block;
    /* Внешние отступы: */
    margin: 35px 50px;
}

/* Элемент div, являющийся дочерним непосредственно по отношению к элементу 
   с классом wrap: */
.wrap>div {
    /* Ширина элемента: */
    width: 200px;
    /* Высота элемента: */
    height: 150px;
    /* Полупрозрачный фоновый цвет: */    
    background: rgba(144, 235, 242, 0.5);
    /* Тип элемента - блочно-строчный. Его внутренняя часть форматируется 
       как блочный элемент, а сам элемент - как строчный: */
    display: inline-block;
    /* Позиционирование блока устанавливается относительно 
       его исходного места: */
    position: relative;
    /* Расположение элемента по оси z. В случае перекрытия элементов, это значение 
       определяет порядок наложения. В данном случае элемент располагается выше 
       всех остальных, т.е. всегда виден пользователю. Это свойство работает только 
       для элементов, у которых значение position задано как absolute, fixed или 
       relative. */
    z-index: 2;
    /* К элементу div, являющемуся дочерним непосредственно по отношению к элементу
       с классом wrap, применяется анимация, заданная последовательностью ключевых
       кадров с именем rotate, продолжительностью 6 секунд. Она проигрывается 
       равномерно на протяжении всего времени, без колебаний в скорости (linear),
       без предварительной задержки (0 сек по умолчанию), бесконечное число раз 
       (infinite). Ключевые кадры проиграются в той же последовательности, в которой
       они были записаны ("animation-direction: normal" по умолчанию). */
    animation: rotate 6s linear infinite;
}

/* Элемент span, являющийся дочерним непосредственно по отношению к элементу div, 
   который, в свою очередь, является дочерним непосредственно по отношению к элементу 
   с классом wrap: */
.wrap>div>span {
    /* Абсолютное позиционирование блока:
       1. Элемент выпадает из потока. Другие элементы отображаются на веб-странице, 
          словно абсолютно позиционированного элемента и нет.
       2. Сжимается под содержимое.
       3. Участвует в «наслаивании».
       4. Гибкая модель позиционирования. Положение элемента задается свойствами 
          left, top, right и bottom.
       5. Свойства задания координат ведут себя по-другому. На положение влияет 
          значение свойства position родительского элемента. Так, если у родителя 
          значение position установлено как static или родителя нет, то отсчет 
          координат ведется от края окна браузера. Если у родителя значение 
          position задано как fixed, relative или absolute, то отсчет координат 
          ведется от края родительского элемента. */
    position: absolute;
    /* Положение элемента. Поскольку у родителя div значение position задано как 
       relative, то отсчет координаты ведется от верхнего края родительского 
       элемента до верхнего края дочернего элемента, а проценты берутся от высоты 
       родительского блока: */
    top: 45%;
    /* Элемент занимает всю ширину родительского элемента: */
    width: 100%;
    /* Горизонтальное выравнивание текста (или строчных элементов): */
    text-align: center;
}

.element-1 {
    /* Координаты точки, относительно которой будет происходить трансформация 
       элемента. Задана точка, находящаяся в самом центре элемента: */
    transform-origin: 50% 50%;
}

.element-2 {
    /* Координаты точки, относительно которой будет происходить трансформация 
       элемента. Задана точка, находящаяся в верхнем левом углу элемента: */
    transform-origin: top left;
}

.element-3 {
    /* Координаты точки, относительно которой будет происходить трансформация 
       элемента. Задана точка, находящаяся в правом верхнем углу элемента: */
    transform-origin: 100% 0%;
}

.element-4 {
    /* Координата точки, относительно которой будет происходить трансформация 
       элемента. Задана точка, находящаяся на расстоянии в 50px по осям x и y
       относительно левого верхнего угла элемента: */
    transform-origin: 50px 50px;
}